---
- name: Get all the vms in temporary folder
  community.vmware.vmware_vm_info:
    validate_certs: false
    hostname: "{{ lookup('env', 'VMWARE_HOST') or xyz_vmware_vm_vcenter_server }}"
    username: "{{ lookup('env', 'VMWARE_USER') or xyz_vmware_vm_vcenter_user }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD') or xyz_vmware_vm_vcenter_pass }}"
    folder: "{{ xyz_vmware_vm_datacenter }}/vm/{{ xyz_vmware_vm_folder }}"
    vm_type: "all"
  register: vm_info
  delegate_to: localhost

- name: Delete VMs
  community.vmware.vmware_guest:
    validate_certs: false
    hostname: "{{ lookup('env', 'VMWARE_HOST') or xyz_vmware_vm_vcenter_server }}"
    username: "{{ lookup('env', 'VMWARE_USER') or xyz_vmware_vm_vcenter_user }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD') or xyz_vmware_vm_vcenter_pass }}"
    uuid: "{{ item['uuid'] }}"
    datacenter: "{{ xyz_vmware_vm_datacenter }}"
    cluster: "{{ xyz_vmware_vm_cluster }}"
    folder: "{{ xyz_vmware_vm_folder }}"
    state: "{{ xyz_vmware_vm_state }}"
    force: "{{ xyz_vmware_vm_force }}"
  delegate_to: localhost
  when: not xyz_vmware_vm_destroy | bool
  with_items:
    - "{{ vm_info['virtual_machines'] }}"

- name: Delete host from windows/linux inventory
  tower_host:
    validate_certs: no
    tower_host: "{{ lookup('env', 'TOWER_HOST') or xyz_vmware_vm_provision_tower_host }}"
    tower_username: "{{ lookup('env', 'TOWER_USERNAME') or xyz_vmware_vm_provision_tower_username }}"
    tower_password: "{{ lookup('env', 'TOWER_PASSWORD') or xyz_vmware_vm_provision_tower_password }}"
    name: "{{ item['guest_name'] }}"
    inventory: "{{ 'Windows' if item['guest_fullname']|regex_search('Windows') else 'Linux' }}"
    state: absent
  delegate_to: localhost
  with_items:
    - "{{ vm_info['virtual_machines'] }}"
  register: test
  when: not xyz_vmware_vm_destroy | bool
